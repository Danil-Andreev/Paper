library(openxlsx)
library(dplyr)
library(stringr)
library(EviewsR)
library(lmtest)
library(forecast) #tsdisplay
dfWrk <- read.csv("dataWrk.csv")
mdlNPL <- lm(data=dfWrk, logNPLa~logSID+R+logNGDP+bvQ1+bvQ2+bvQ3)
### Testing model for problems
library(normtest)
library(car)
library(lmtest)
testing.model <- function(model) {
cat("R-squared:", summary(model)$r.squared, fill = T)
cat("Adj. R-squared:", summary(model)$adj.r.squared, fill = T)
cat("AIC: ", AIC(model), fill = T)
cat(fill = T)
cat("Normality of disturbances: ", jb.norm.test(model$residuals)$p.value, fill = T)
cat(fill = T)
cat("Multicollinearity: ", max(vif(model)), fill = T)
cat(fill = T)
cat("Heteroskedasticity: ", bptest(model)$p.value, fill = T)
cat(fill = T)
cat("Autocorrelation of 1 order: ", bgtest(model)$p.value, fill = T)
cat(fill = T)
cat("RESET-test: ", reset(model)$p.value, fill = T)
}
dfWrk <- read.csv("dataWrk.csv")
tsWrk <- ts(data = dfWrk, start = c(2008, 4), frequency = 4)
mdlNPL <- lm(data=dfWrk, logNPLa~logSID+R+logNGDP+bvQ1+bvQ2+bvQ3)
mdlNPLDan <- dynlm(data = dfWrk, log(NPLa) ~ indexPayment + UNEMPL + log(SID) + log(NGDP) + DR + log(L(NPLa)))
library(openxlsx)
library(dplyr)
library(stringr)
library(EviewsR)
library(lmtest)
library(forecast) #tsdisplay
library(dynlm)
library(Metrics)
mdlNPLDan <- dynlm(data = dfWrk, log(NPLa) ~ indexPayment + UNEMPL + log(SID) + log(NGDP) + DR + log(L(NPLa)))
mdlNPLDan <- dynlm(data = dfWrk, log(diff(NPLa)) ~ UNEMPL + INFL + bvCrisis)
