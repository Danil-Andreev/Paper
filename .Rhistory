LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
#I(GREV*100/NGDP) +
#I(GEXP*100/NGDP) +
#WSGDP +
#Tax+
DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
I(Unempl^2) +
#I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
I(GREV*100/NGDP) +
I(GEXP*100/NGDP) +
#WSGDP +
Tax+
DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
I(Unempl^2) +
#I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
I(GREV*100/NGDP) +
I(GEXP*100/NGDP) +
WSGDP +
Tax+
DCPS+
AGRO+
#DR+
#CM+
#CH+
vTax+
I(Unempl^2) +
I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
I(GREV*100/NGDP) +
I(GEXP*100/NGDP) +
WSGDP +
Tax+
DCPS+
#AGRO+
#DR+
#CM+
#CH+
vTax+
I(Unempl^2) +
I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
I(GREV*100/NGDP) +
I(GEXP*100/NGDP) +
#WSGDP +
Tax+
DCPS+
#AGRO+
#DR+
#CM+
#CH+
vTax+
I(Unempl^2) +
I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
I(GREV*100/NGDP) +
I(GEXP*100/NGDP) +
WSGDP +
Tax+
DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
I(Unempl^2) +
I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
I(GREV*100/NGDP) +
I(GEXP*100/NGDP) +
WSGDP +
Tax+
DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
I(Unempl^2) +
#I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
I(GREV*100/NGDP) +
I(GEXP*100/NGDP) +
#WSGDP +
Tax+
DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
I(Unempl^2) +
#I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
I(GREV*100/NGDP) +
I(GEXP*100/NGDP) +
#WSGDP +
#Tax+
DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
I(Unempl^2) +
#I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
I(GREV*100/NGDP) +
I(GEXP*100/NGDP) +
#WSGDP +
Tax+
#DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
I(Unempl^2) +
#I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
#I(GREV*100/NGDP) +
#I(GEXP*100/NGDP) +
#WSGDP +
Tax+
DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
I(Unempl^2) +
#I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
#I(GREV*100/NGDP) +
#I(GEXP*100/NGDP) +
#WSGDP +
Tax+
#DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
I(Unempl^2) +
#I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
#I(GREV*100/NGDP) +
#I(GEXP*100/NGDP) +
#WSGDP +
#Tax+
#DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
I(Unempl^2) +
#I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
#I(GREV*100/NGDP) +
#I(GEXP*100/NGDP) +
#WSGDP +
#Tax+
#DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
Unempl +
#I(LUnempl^2)+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
#I(GREV*100/NGDP) +
#I(GEXP*100/NGDP) +
#WSGDP +
#Tax+
#DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
Unempl +
LUnempl+
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
formula <- NPLp ~
perSIDinNGDP +
#I(GREV*100/NGDP) +
#I(GEXP*100/NGDP) +
#WSGDP +
#Tax+
#DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
Unempl +
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
dataAR <- read_csv("C://R//Data//PaperGit//Paper//dataAR.csv", col_types = cols(Date = col_character()))
dataAR$perSIDinNGDP <- dataAR$SID*100/dataAR$NGDP
dataAR$LNPLp <- c(NA, dataAR$NPLp[-44])
dataAR$LUnempl <- c(NA, dataAR$Unempl[-44])
dataAR$L2Unempl <- c(NA, NA, dataAR$LUnempl[-43])
dataAR <- read_csv("C://R//Data//PaperGit//Paper//dataAR.csv", col_types = cols(Date = col_character()))
dataAR$perSIDinNGDP <- dataAR$SID*100/dataAR$NGDP
dataAR$LNPLp <- c(NA, dataAR$NPLp[-44])
dataAR$LUnempl <- c(NA, dataAR$Unempl[-44])
dataAR$L2Unempl <- c(NA, dataAR$LUnempl[-43])
dataAR <- read_csv("C://R//Data//PaperGit//Paper//dataAR.csv", col_types = cols(Date = col_character()))
dataAR$perSIDinNGDP <- dataAR$SID*100/dataAR$NGDP
dataAR$LNPLp <- c(NA, dataAR$NPLp[-44])
dataAR$L2NPLp <- c(NA, dataAR$LNPLp[-43])
dataAR$LUnempl <- c(NA, dataAR$Unempl[-44])
formula <- NPLp ~
perSIDinNGDP +
#I(GREV*100/NGDP) +
#I(GEXP*100/NGDP) +
#WSGDP +
#Tax+
#DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
Unempl +
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
L2NPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
# Adjust randomness
set.seed(1234)
formulaCPL <- formula(paste(formula[2], formula[1], formula[3],
" | continuous(perSIDinNGDP, indexInstitute)"))
cplAR <- copulaCorrection(formula =  formulaCPL, num.boots = 10000, data=dataAR)
formula <- NPLp ~
perSIDinNGDP +
#I(GREV*100/NGDP) +
#I(GEXP*100/NGDP) +
#WSGDP +
#Tax+
#DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
Unempl +
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
L2NPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
# Adjust randomness
set.seed(1234)
formulaCPL <- formula(paste(formula[2], formula[1], formula[3],
" | continuous(perSIDinNGDP, indexInstitute)"))
cplAR <- copulaCorrection(formula =  formulaCPL, num.boots = 10000, data=dataAR)
dataAR <- read_csv("C://R//Data//PaperGit//Paper//dataAR.csv", col_types = cols(Date = col_character()))
dataAR$perSIDinNGDP <- dataAR$SID*100/dataAR$NGDP
dataAR$LNPLp <- c(NA, dataAR$NPLp[-44])
dataAR$L2NPLp <- c(NA, dataAR$LNPLp[-43])
dataAR$LUnempl <- c(NA, dataAR$Unempl[-44])
dataAR <- dataAR[2:44,]
dataAR <- read_csv("C://R//Data//PaperGit//Paper//dataAR.csv", col_types = cols(Date = col_character()))
dataAR$perSIDinNGDP <- dataAR$SID*100/dataAR$NGDP
dataAR$LNPLp <- c(NA, dataAR$NPLp[-44])
dataAR$L2NPLp <- c(NA, dataAR$LNPLp[-43])
dataAR$LUnempl <- c(NA, dataAR$Unempl[-44])
dataAR <- dataAR[3:44,]
formula <- NPLp ~
perSIDinNGDP +
#I(GREV*100/NGDP) +
#I(GEXP*100/NGDP) +
#WSGDP +
#Tax+
#DCPS+
#AGRO+
#DR+
#CM+
#CH+
#vTax+
Unempl +
indexBureau  +
indexDemocracy +
indexInstitute +
LNPLp+
L2NPLp+
bvQ1 +
bvQ2 +
bvQ3
mdlAR <- lm(data=dataAR, formula = formula)
summary(mdlAR)
testing.model(mdlAR)
# Adjust randomness
set.seed(1234)
formulaCPL <- formula(paste(formula[2], formula[1], formula[3],
" | continuous(perSIDinNGDP, indexInstitute)"))
cplAR <- copulaCorrection(formula =  formulaCPL, num.boots = 10000, data=dataAR)
summary(cplKG)
summary(cplAR)
summary(cplAR)
summary(cplAR)
tab <- matrix(c(c(mdlAR$coefficients, rep(NA,2)), cplAR$coefficients), ncol=2)
colnames(tab) <- c("OLS", "Copula")
rownames(tab) <- cplAR$names.main.coefs
tab
